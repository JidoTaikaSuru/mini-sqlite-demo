# syntax=docker/dockerfile:1

# Comments are provided throughout this file to help you get started.
# If you need more help, visit the Dockerfile reference guide at
# https://docs.docker.com/go/dockerfile-reference/

ARG NODE_VERSION=20.7.0

FROM node:${NODE_VERSION}-alpine

# Use production node environment by default.
ENV NODE_ENV production


WORKDIR /usr/src/app

# Download dependencies as a separate step to take advantage of Docker's caching.
# Leverage a cache mount to /root/.npm to speed up subsequent builds.
# Leverage a bind mounts to package.json and package-lock.json to avoid having to copy them into
# into this layer.
RUN --mount=type=bind,source=package.json,target=package.json \
    --mount=type=bind,source=package-lock.json,target=package-lock.json \
    --mount=type=cache,target=/root/.npm \
    npm ci --omit=dev

    




# Copy the rest of the source files into the image.
COPY . ./

#RUN npm install pnpm -g
#RUN pnpm i 
#RUN pnpm setup
#RUN pnpm install drizzle-kit -g --save-dev
#RUN pnpm install drizzle-orm -g --save-dev
#RUN pnpm run generate


#RUN npm install 
RUN npm i -D pg

RUN npm install drizzle-kit -g --save-dev
RUN npm install drizzle-orm -g --save-dev
RUN npm run generate
RUN npm run build 

#RUN npm run generate
#RUN npm run migrate



# Expose the port that the application listens on.
EXPOSE 3000

# Run the application as a non-root user.
USER node

# Run the application.
CMD npm run dev
